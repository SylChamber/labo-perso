#!/usr/bin/bash
# Construit un fichier _combustion_ pour la configuration d'openSUSE MicroOS/Leap Micro
# https://documentation.suse.com/sle-micro/6.1/html/Micro-deployment-raw-images/index.html
# Basé sur https://en.opensuse.org/SDB:K3s_cluster_deployment_on_MicroOS

set -euo pipefail
SCRIPT_DIR=$(dirname "$0")

>&2 echo "Ce script va générer un fichier combustion pour configurer l'installation d'openSUSE MicroOS/Leap Micro.
"

# Demander un mot de passe root
read -sp "Veuillez saisir un mot de passe pour le compte root: " ROOT_PASSWORD
>&2 echo

# Demander un nom d'utilisateur
read -p "Veuillez saisir un nom d'utilisateur à ajouter au système: " USERNAME
read -sp "Veuillez saisir un mot de passe pour cet utilisateur: " USER_PASSWORD
>&2 echo

# importer les clés publiques de l'utilisateur
SSH_KEYS=($(ls ~/.ssh/*.pub))
if [ ${#SSH_KEYS[@]} = 0 ]; then
    >&2 echo "Aucune clé SSH trouvée. Une clé SSH est requise pour l'accès distant."
    exit 1
fi
SSH_PUBLIC_KEY=$(basename ${SSH_KEYS[0]})
cp ${SSH_KEYS[0]} $SCRIPT_DIR/

>&2 echo "La clé SSH publique ${SSH_PUBLIC_KEY} a été copiée pour associer au compte root et au compte utilisateur."

read -p "Veuillez saisir un nom d'hôte (hostname) pour le système: " SERVER_HOSTNAME

ROOT_PASSWORD_ENC=$(echo $ROOT_PASSWORD | openssl passwd -6 -stdin)
USER_PASSWORD_ENC=$(echo $USER_PASSWORD | openssl passwd -6 -stdin)

>&2 echo -e "Le script de combustion sera généré avec les variables suivantes:

root password: $ROOT_PASSWORD_ENC
username: $USERNAME
user password: $USER_PASSWORD_ENC
ssh key: $SSH_PUBLIC_KEY
hostname: $SERVER_HOSTNAME"

cat << EOF > $SCRIPT_DIR/script
#!/bin/bash
# Initialisation du serveur openSUSE MicroOS/Leap Micro
# https://documentation.suse.com/sle-micro/6.1/html/Micro-deployment-raw-images/index.html
# Basé sur https://en.opensuse.org/SDB:K3s_cluster_deployment_on_MicroOS

set -e
 
## Note:
## To check if the k3s installation has been finished
## issue the "systemctl status k3sinstall.service" command.
## To finish the installation you must reboot!
## Once booted you can check the node with:
## "kubectl get nodes"
## For more check out:
## "https://documentation.suse.com/trd/kubernetes/pdf/kubernetes_ri_k3s-slemicro_color_en.pdf"
 
## Enable network
# combustion: network
## Post output on stdout
exec > >(exec tee -a /dev/tty0) 2>&1

## Add password for root user
## SUSE documentation recommends openssl passwd -6, mkpasswd --method=sha-512 works as well
## The default password that is set here is: linux
ROOT_USER_PASSWORD="$ROOT_PASSWORD_ENC"
SSH_ROOT_PUBLIC_KEY=$SSH_PUBLIC_KEY
SSH_USER_PUBLIC_KEY=$SSH_PUBLIC_KEY
USER_REQUIRED_PACKAGES='bash-completion zsh zsh-htmldoc'
CREATE_NORMAL_USER="$USERNAME"  ## Add the username here to create a user, leave empty to skip creating one
NORMAL_USER_PASSWORD="$USER_PASSWORD_ENC"
NODE_HOSTNAME="$SERVER_HOSTNAME"  ## If you want to add additional nodes to a cluster you must set the hostname or nodes will not be able to join
## K3s configuration
INSTALL_K3S_UPSTREAM=true  ## Set to false if you want to use the openSUSE rpm, also add the package name to USER_REQUIRED_PACKAGES
INSTALL_K3S_EXEC='server --cluster-init --write-kubeconfig-mode=644'

## Set hostname
echo \$NODE_HOSTNAME > /etc/hostname

## Mount /var and /home so user can be created smoothly
if [ "\$CREATE_NORMAL_USER" ]
then
    mount /var && mount /home
fi

## Set root password
echo root:\$ROOT_USER_PASSWORD | chpasswd -e
## Add ssh public key as authorized key for the root user
mkdir -pm700 /root/.ssh/
cat \$SSH_ROOT_PUBLIC_KEY >> /root/.ssh/authorized_keys

## User creation
if [ "\$CREATE_NORMAL_USER" ]
then
    echo "User creation is requested, creating user."
    useradd -m \$CREATE_NORMAL_USER -s /bin/bash -g users
    echo \$CREATE_NORMAL_USER:\$NORMAL_USER_PASSWORD | chpasswd -e
    echo \$CREATE_NORMAL_USER "ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/adminusers
    mkdir -pm700 /home/\$CREATE_NORMAL_USER/.ssh/
    chown -R \$CREATE_NORMAL_USER:users /home/\$CREATE_NORMAL_USER/.ssh/
    cat \$SSH_USER_PUBLIC_KEY >> /home/\$CREATE_NORMAL_USER/.ssh/authorized_keys
    echo "Requested user has been created, requested password has been set."
  else
    echo "No user will be created"
fi

## Install required packages
if [ "\$USER_REQUIRED_PACKAGES" ]
then
    zypper ref && zypper --non-interactive install \$USER_REQUIRED_PACKAGES
fi

if \$INSTALL_K3S_UPSTREAM; then
    ## Download and install the latest k3s installer
    curl -L --output k3s_installer.sh https://get.k3s.io && install -m755 k3s_installer.sh /usr/bin/
    ## Create a systemd unit that installs k3s if not installed yet
    cat <<- EOF > /etc/systemd/system/install-rancher-k3s.service
    [Unit]
    Description=Run K3s installer
    Wants=network-online.target
    After=network.target network-online.target
    ConditionPathExists=/usr/bin/k3s_installer.sh
    ConditionPathExists=!/usr/local/bin/k3s
    [Service]
    Type=forking
    TimeoutStartSec=120
    Environment="INSTALL_K3S_EXEC=\$INSTALL_K3S_EXEC"
    ExecStart=/usr/bin/k3s_installer.sh
    RemainAfterExit=yes
    KillMode=process
    [Install]
    WantedBy=multi-user.target
    EOF
fi

## Enable services
systemctl enable cockpit.socket
systemctl enable sshd
systemctl enable install-rancher-k3s.service

## Unmount var and home
if [ "\$CREATE_NORMAL_USER" ]
then
    umount /var && umount /home
fi

echo "Configured with Combustion" > /etc/issue.d/combustion
EOF
